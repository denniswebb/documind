name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x]
        os: [ubuntu-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run unit tests
      run: npm test
    
    - name: Run integration tests
      run: |
        if [ -d tests/integration ] && [ -n "$(ls -A tests/integration/*.test.js 2>/dev/null)" ]; then
          npm run test:integration
        else
          echo "No integration tests found, skipping"
        fi
    
    - name: Generate test coverage
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Test deployment scripts
      run: |
        if [ -f .documind/scripts/install.js ]; then
          echo "Testing install script"
          node .documind/scripts/install.js
        fi
        if [ -f .documind/scripts/generate-commands.js ]; then
          echo "Testing generate-commands script"  
          node .documind/scripts/generate-commands.js
        fi
        if [ -f .documind/scripts/update.js ]; then
          echo "Testing update script"
          node .documind/scripts/update.js
        fi

  lint:
    name: Lint and Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting (if configured)
      run: |
        if npm run lint --silent 2>/dev/null; then
          npm run lint
        else
          echo "No linting configured, skipping"
        fi
      continue-on-error: true

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run performance tests
      run: |
        if npm run test:performance --silent 2>/dev/null; then
          npm run test:performance
        else
          echo "No performance tests configured"
          if [ -f .documind/scripts/install.js ]; then
            echo "Running basic install timing"
            time node .documind/scripts/install.js
          else
            echo "No install script found, skipping timing test"
          fi
        fi
      continue-on-error: true

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=high
      continue-on-error: true
    
    - name: Check for known vulnerabilities
      run: |
        if command -v npm &> /dev/null; then
          npm audit --audit-level=moderate || echo "Audit completed with warnings"
        fi